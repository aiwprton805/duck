<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.magistr.duck.dao.TermDao">
    <!-- ============================== RESULT MAP ============================== -->
    <resultMap type="Term" id="termResult">
        <id property="id" column="id" />
        <result property="termGroupId" column="term_group_id" />
        <result property="lang" javaType="com.magistr.duck.common.enums.Lang" column="lang" />
        <result property="status" javaType="com.magistr.duck.common.enums.TermStatus" column="status" />
        <result property="name" column="name" />
        <result property="grammar" column="grammar" />
        <result property="area" column="area" />
        <result property="description" column="description" />
        <result property="examples" javaType="list" column="examples" />
    </resultMap>

    <!-- ========================= SELECT ALL TERMS SQL ========================= -->
    <sql id="selectAllTerms">
        SELECT
            trm.id AS id,
            trm.term_group_id AS term_group_id,
            lng.name AS lang,
            ts.name AS status,
            trm.name AS name,
            trm.grammar AS grammar,
            trm.area AS area,
            trm.description AS description,
            trm.examples AS examples
        FROM duck.terms trm
        LEFT JOIN duck.langs lng ON lng.id = trm.lang_id
        LEFT JOIN duck.terms_status ts ON ts.id = trm.status_id
    </sql>

    <!-- ================================ CREATE ================================ -->
    <insert id="create" parameterType="Term">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="BEFORE">
            INSERT INTO duck.terms(term_group_id, lang_id, name, grammar, area, description, examples)
            VALUES (#{termGroupId}, #{lang.ordinal}, #{name}, #{grammar}, #{area}, #{description}, #{examples})
            RETURNING id;
        </selectKey>
    </insert>

    <!-- ================================= READ ================================= -->
    <select id="read" parameterType="int" resultMap="termResult">
        <include refid="selectAllTerms" />
        WHERE trm.id = #{id};
    </select>

    <!-- ================================ UPDATE ================================ -->
    <update id="update" parameterType="Term">
        UPDATE duck.terms
        <set>
            <if test="termGroupId != null">term_group_id = #{termGroupId},</if>
            <if test="lang != null">lang_id = #{lang.ordinal},</if>
            <if test="status != null">status_id = #{status.ordinal},</if>
            <if test="name != null">name = #{name},</if>
            grammar = #{grammar},
            area = #{area},
            description = #{description},
            examples = #{examples}
        </set>
        WHERE id = #{id};
    </update>

    <!-- ================================ DELETE ================================ -->
    <delete id="delete" parameterType="int">
        DELETE FROM duck.terms WHERE id = #{id};
    </delete>

    <!-- ======================== FIND BY NAME AND LANG ========================= -->
    <select id="findByNameAndLang" parameterType="map" resultMap="termResult">
        <include refid="selectAllTerms" />
        WHERE trm.lang_id = #{langId} AND trm.name = #{name};
    </select>

    <!-- ============================ FIND BY STATUS ============================ -->
    <select id="findByTermStatus" parameterType="int" resultMap="termResult">
        <include refid="selectAllTerms" />
        WHERE trm.status_id = #{statusId};
    </select>

    <!-- ============================ FIND BY PROFILE =========================== -->
    <select id="findByProfileId" parameterType="int" resultMap="termResult">
        <include refid="selectAllTerms" />
        LEFT JOIN duck.profiles_terms pt ON pt.term_id = trm.id
        WHERE pt.profile_id = #{profileId};
    </select>

    <!-- ====================== FIND BY PROFILE AND STATUS ====================== -->
    <select id="findByProfileIdAndTermStatus" parameterType="map" resultMap="termResult">
        <include refid="selectAllTerms" />
        LEFT JOIN duck.profiles_terms pt ON pt.term_id = trm.id
        WHERE pt.profile_id = #{profileId} AND ts.id = #{statusId};
    </select>

    <!-- ======================= FIND BY PROFILE AND LANG ======================= -->
    <select id="findByProfileIdAndLang" parameterType="map" resultMap="termResult">
        <include refid="selectAllTerms" />
        LEFT JOIN duck.profiles_terms pt ON pt.term_id = trm.id
        WHERE pt.profile_id = #{profileId} AND lng.id = #{langId};
    </select>

    <!-- ======================= FIND BY PROFILE AND LANG ======================= -->
    <select id="findByProfileIdAndStatusAndLang" parameterType="map" resultMap="termResult">
        <include refid="selectAllTerms" />
        LEFT JOIN duck.profiles_terms pt ON pt.term_id = trm.id
        WHERE pt.profile_id = #{profileId} AND ts.id = #{statusId} AND lng.id = #{langId};
    </select>

    <!-- =============================== FIND ALL =============================== -->
    <select id="findAll" resultMap="termResult">
        <include refid="selectAllTerms" />;
    </select>
</mapper>
