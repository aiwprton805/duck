<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.magistr.duck.dao.mybatis.mappers.TermInfoMapper">
    <!-- ============================== RESULT MAP ============================== -->
    <resultMap type="TermInfo" id="termInfoResult">
        <id property="id" column="term_info_id" />
        <result property="grammar" column="term_info_grammar" />
        <result property="purview" column="term_info_purview" />
        <result property="description" column="term_info_description" />
        <association property="commonInfo" resultMap="termCommonInfoResult" columnPrefix="term_common_info_" />
        <collection property="examples" ofType="string" column="term_info_examples" />
    </resultMap>

    <resultMap type="TermCommonInfo" id="termCommonInfoResult">
        <id property="id" column="id" />
        <result property="picturesDirName" column="pictures_dir_name" />
        <result property="author" column="author" />
    </resultMap>

    <!-- ======================= SELECT ALL TERM INFO SQL ======================= -->
    <sql id="selectAllTermInfo">
        SELECT
            ti.id AS term_info_id,
            ti.grammar AS term_info_grammar,
            ti.purview AS term_info_purview,
            ti.description AS term_info_description,
            tci.id AS term_common_info_id,
            tci.pictures_dir_name AS term_common_info_pictures_dir_name,
            tci.author AS term_common_info_author,
            ti.examples AS term_info_examples
        FROM @{jdbc.schema}.term_info ti
        LEFT JOIN @{jdbc.schema}.term_common_info tci ON tci.id = ti.term_common_info_id
    </sql>

    <!-- ========================== CREATE COMMON INFO ========================== -->
    <insert id="createCommonInfo" parameterType="TermCommonInfo">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="BEFORE">
            INSERT INTO @{jdbc.schema}.term_common_info(pictures_dir_name, author)
            VALUES (#{picturesDirName}, #{author}) RETURNING id;
        </selectKey>
    </insert>

    <!-- ================================ CREATE ================================ -->
    <insert id="create" parameterType="TermInfo">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="BEFORE">
            <choose>
                <when test="examples.isEmpty()">
                    INSERT INTO @{jdbc.schema}.term_info(term_common_info_id, grammar, purview, description)
                </when>
                <otherwise>
                    INSERT INTO @{jdbc.schema}.term_info(term_common_info_id, grammar, purview, description, examples)
                </otherwise>
            </choose>
            VALUES (#{commonInfo.id}, #{grammar}, #{purview}, #{description}
            <foreach collection="examples" open=", {" separator="," close="}" item="example">
                #{example}
            </foreach>
            ) RETURNING id;
        </selectKey>
    </insert>

    <!-- ================================= READ ================================= -->
    <select id="read" parameterType="int" resultMap="termInfoResult">
        <include refid="selectAllTermInfo" />
        WHERE ti.id = #{id};
    </select>

    <!-- ================================ UPDATE ================================ -->
    <update id="update" parameterType="TermInfo">
        UPDATE @{jdbc.schema}.term_common_info
        <set>
            <if test="pictures_dir_name != null">pictures_dir_name = #{commonInfo.picturesDirName},</if>
            <if test="author != null">author = #{commonInfo.author}</if>
        </set>
        WHERE id = #{commonInfo.id};

        UPDATE @{jdbc.schema}.term_info
        <set>
            <if test="grammar != null">grammar = #{grammar},</if>
            <if test="purview != null">purview = #{purview},</if>
            <if test="description != null">description = #{description},</if>
            <if test="examples != null">
                examples = 
                <foreach collection="examples" open="{" separator="," close="}" item="example">
                    #{example}
                </foreach>
            </if>
        </set>
        WHERE id = #{id};
    </update>

    <!-- ================================ DELETE ================================ -->
    <delete id="delete" parameterType="int">
        DELETE FROM @{jdbc.schema}.term_info WHERE id = #{id};
    </delete>

    <!-- ============================ FIND BY TERM ID =========================== -->
    <select id="findByTermId" parameterType="map" resultMap="termInfoResult">
        <choose>
            <when test="lang == @com.magistr.duck.common.enums.Lang@RU">
                <include refid="com.magistr.duck.dao.mybatis.mappers.TermMapper.selectAllRuTerms" />
                LEFT JOIN @{jdbc.schema}term_info ti ON ti.id = tr.term_info_id
                WHERE tr.id = #{id};
            </when>
            <when test="lang == @com.magistr.duck.common.enums.Lang@DE">
                <include refid="com.magistr.duck.dao.mybatis.mappers.TermMapper.selectAllRuTerms" />
                LEFT JOIN @{jdbc.schema}term_info ti ON ti.id = td.term_info_id
                WHERE td.id = #{id};
            </when>
        </choose>
    </select>

    <!-- =========================== FIND BY TERM NAME ========================== -->
    <select id="findByTermName" parameterType="map" resultMap="termInfoResult">
        <choose>
            <when test="lang == @com.magistr.duck.common.enums.Lang@RU">
                <include refid="com.magistr.duck.dao.mybatis.mappers.TermMapper.selectAllRuTerms" />
                LEFT JOIN @{jdbc.schema}term_info ti ON ti.id = tr.term_info_id
                WHERE tr.name = #{name};
            </when>
            <when test="lang == @com.magistr.duck.common.enums.Lang@DE">
                <include refid="com.magistr.duck.dao.mybatis.mappers.TermMapper.selectAllRuTerms" />
                LEFT JOIN @{jdbc.schema}term_info ti ON ti.id = td.term_info_id
                WHERE td.name = #{name};
            </when>
        </choose>
    </select>
</mapper>

