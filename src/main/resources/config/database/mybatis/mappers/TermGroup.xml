<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.magistr.duck.dao.TermGroupDao">
    <!-- ============================== RESULT MAP ============================== -->
    <resultMap type="TermGroup" id="termGroupResult">
        <id property="id" column="id" />
        <result property="picturesDirectory" column="pictures_dir" />
        <result property="author" column="author" />
        <collection property="terms" resultMap="com.magistr.duck.dao.TermDao.termResult" columnPrefix="t_"/>
    </resultMap>

    <!-- ====================== SELECT ALL TERM GROUPS SQL ====================== -->
    <sql id="selectAllTermGroups">
        SELECT
            tg.id AS id,
            tg.pictures_dir_name AS pictures_dir,
            tg.author AS author,
            trm.id AS t_id,
            trm.term_group_id AS t_term_group_id,
            lng.name AS t_lang,
            ts.name AS t_status,
            trm.name AS t_name,
            trm.grammar AS t_grammar,
            trm.area AS t_area,
            trm.description AS t_description,
            trm.examples AS t_examples
        FROM @{jdbc.schema}.term_groups tg
        INNER JOIN @{jdbc.schema}.terms trm ON tg.id = trm.term_group_id
        INNER JOIN @{jdbc.schema}.langs lng ON lng.id = trm.lang_id
        INNER JOIN @{jdbc.schema}.terms_status ts ON ts.id = trm.status_id
    </sql>

    <!-- ================================ CREATE ================================ -->
    <insert id="create" parameterType="TermGroup">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="BEFORE">
            INSERT INTO @{jdbc.schema}.term_groups(pictures_dir_name, author)
            VALUES (#{picturesDirectory}, #{author}) RETURNING id;
        </selectKey>
    </insert>
    
    <!-- ================================= READ ================================= -->
    <select id="read" parameterType="int" resultMap="termGroupResult">
        <include refid="selectAllTermGroups" />
        WHERE tg.id = #{id};
    </select>

    <!-- ================================ UPDATE ================================ -->
    <update id="update" parameterType="TermGroup">
        UPDATE @{jdbc.schema}.term_groups
        <set>
            pictures_dir_name = #{picturesDirectory},
            author = #{author}
        </set>
        WHERE id = #{id};
    </update>

    <!-- ================================ DELETE ================================ -->
    <delete id="delete" parameterType="int">
        DELETE FROM @{jdbc.schema}.term_groups WHERE id = #{id};
    </delete>

    <!-- =============================== FIND ALL =============================== -->
    <select id="findAll" resultMap="termGroupResult">
        <include refid="selectAllTermGroups" />;
    </select>

    <!-- ============================= FIND BY TERM ============================= -->
    <select id="findByTermGroupId" parameterType="int" resultMap="termGroupResult">
        <include refid="selectAllTermGroups" />
        WHERE tg.id = #{termGroupId};
    </select>

    <!-- ====================== FIND LAST COMPLETED GROUPS ====================== -->
    <select id="findLastCompletedGroups" parameterType="int" resultMap="termGroupResult">
        <include refid="selectAllTermGroups" />
        -- 3 - status COMPLETED; 2 - count of languages
        WHERE (SELECT bool_and(t.status_id = 3)
          FROM @{jdbc.schema}.terms t WHERE t.term_group_id = tg.id
          GROUP BY t.status_id HAVING count(*) = 2) = true
        ORDER BY tg.id DESC LIMIT #{limit}*2;
    </select>
</mapper>
