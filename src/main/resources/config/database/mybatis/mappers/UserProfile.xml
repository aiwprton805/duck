<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.magistr.duck.dao.UserProfileDao">
    <!-- ============================== RESULT MAP ============================== -->
    <resultMap type="UserProfile" id="userProfileResult">
        <result property="userId" column="user_id" />
        <result property="profileId" column="profile_id" />
        <result property="username" column="user_name" />
        <result property="name" column="profile_name" />
        <result property="password" column="user_password" />
        <result property="email" column="profile_email" />
        <collection property="roles" ofType="Role" resultMap="rolesResult" columnPrefix="role_" />
    </resultMap>

    <resultMap type="Role" id="rolesResult">
        <id property="id" column="id" />
        <result property="name" column="name" />
    </resultMap>

    <!-- ===================== SELECT ALL USER PROFILES SQL ===================== -->
    <sql id="selectAllUserProfiles">
        SELECT
            u.id AS user_id,
            p.id AS profile_id,
            u.name AS user_name,
            p.name AS profile_name,
            u.password AS user_password,
            p.email AS profile_email,
            r.id AS role_id,
            r.name AS role_name
        FROM @{jdbc.schema}.users u
            LEFT JOIN @{jdbc.schema}.users_roles ur ON ur.user_id = u.id
            LEFT JOIN @{jdbc.schema}.roles r ON r.id = ur.role_id
            LEFT JOIN @{jdbc.schema}.profiles p ON p.user_id = u.id
    </sql>

    <!-- =========================== FIND BY ROLE NAME ========================== -->
    <select id="findByRoleName" parameterType="string" resultMap="userProfileResult">
        <include refid="selectAllUserProfiles" />
        WHERE EXISTS(SELECT 1 FROM @{jdbc.schema}.users_roles WHERE user_id = u.id AND role_id =
        <choose>
            <when test="_parameter == 'admin'">1</when>
            <when test="_parameter == 'lector'">2</when>
            <when test="_parameter == 'student'">3</when>
            <when test="_parameter == 'guest'">4</when>
        </choose>)
        ORDER BY p.name;
    </select>

    <!-- =============================== FIND ALL =============================== -->
    <select id="findAll" resultMap="userProfileResult">
        <include refid="selectAllUserProfiles" />
        ORDER BY p.name;
    </select>
</mapper>
